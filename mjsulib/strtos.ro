'\" t
.\" MJS Portable C Library
.\" Module: quick-reference manual-page for strtos()
.\"
.\" Copyright (c) 2012 Mike Spooner
.\"----------------------------------------------------------------------
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"----------------------------------------------------------------------
.TD
.TH strtos @LF 17jun2012 "MJSulib"
.SH NAME
strtos \- convert numeric string to short integer, with range-checking.
.SH SYNOPSIS
#include "mjsu.h"

short strtos(const char *str, char **endptr, int base);
.SH DESCRIPTION
\fBstrtos()\fP converts the initial portion of the string at \fIstr\fP into
a "short int" value, with range-checking.
.LP
As such, it is a "short int" version of the standard C function \fBstrtol()\fP.
.SH RETURNS
If successful, strtos() returns the converted
value, if any.
.LP
If no conversion could be performed (because the string at \fIstr\fP does not
represent a number), 0 is returned and \fBerrno\fP is set to EINVAL.
.LP
If the correct value is outside the range of values representable in a
\fBshort int\fP,
SHRT_MAX or SHRT_MIN is returned (according to the
sign of the value), and \fBerrno\fP is set to ERANGE.
.SH SEE ALSO
\fBstrtol\fP(@LF).
.SH NOTES
Similarly to \fBstrtol()\fP,
because 0,
.SB SHRT_MIN
and
.SB SHRT_MAX
are returned on error and are also
valid returns on success, an application wishing to check for error
conditions should set
.B errno
to 0, then call
.BR strtos() ,
then check
.B errno
and if it is non-zero, assume an error has occurred.
.SH AVAILABILITY
\fBstrtos()\fP
is written in C,
conforming to ANSI X3.159-1989 (hosted program environment).
