'\" t
.\" MJS Portable C Library
.\" Module: quick-reference manual-page for vec_free()
.\"
.\" Copyright (c) 1991 Mike Spooner
.\"----------------------------------------------------------------------
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"----------------------------------------------------------------------
.TD
.TH vec_free @LF "17mar91" "MJSulib"
.SH NAME
vec_free \- deallocate a vector of strings
.SH SYNOPSIS
#include "mjsu.h"

CHAR **vec_free(CHAR **vec)
.SH DESCRIPTION
\fBvec_free()\fP deallocates the heap storage used by the
string vector at \fIvec\fP.
.LP
\fIvec\fP should be a pointer to a vector previously returned by
\fBvec_buy()\fP or \fBvec_dup()\fP.
.SH RETURNS
\fBvec_free()\fP always returns NULL, which is a common sentinel value
for invalid or unused pointers.
.SH EXAMPLE
To discard a string vector and mark it's pointer as invalid:
.nf

	newav = vec_free(newav);
	
.fi
.SH SEE ALSO
\fBvec_buy(@LF)\fP, \fBvec_dup(@LF)\fP,
\fBmjsu(@MI)\fP.
.LP
\fBmalloc()\fP and \fBfree()\fP, as defined by ANSI X3.159-1989.
.SH AVAILABILITY
\fBvec_free()\fP is written in C, conforming to ANSI X3.159-1989.
.SH NOTES
The term \fIstring vector\fP is not universally known. The simplest way
to define the term is by example: the second argument to \fBmain()\fP is
a string vector, although it is not stored on the heap.
